// message.c
// modify by Yu Jue 1998-3-5

#include <ansi.h>
#include <dbase.h>

#define MAX_MSG_BUFFER 100

static string *msg_buffer = ({});

void receive_message(string msgclass, string msg)
{
        string subclass, *ch;
	object me = this_object();
	if (!stringp(msg)) return;
        if( !interactive(this_object()) ) {
                this_object()->relay_message(msgclass, msg);
                return;
        }
        msg = CONVERT_D->output(msg,this_object());
        
	if( sscanf(msgclass, "%s:%s", subclass, msgclass)==2 ) {
		switch(subclass) {
			case "channel":
				break;
			case "outdoor":
				if( !environment() || !environment()->query("outdoors") )
					return;
				break;
			default:
				error("Message: Invalid Subclass " + subclass + ".\n");
		}
	}

	if( query_temp("block_msg/all") || query_temp("block_msg/" + msgclass) )
		return;

//    if (query_temp("big5")) msg = "/adm/daemons/gb_b5d"->gb_b5(msg);

    if( in_input(me) || in_edit(me) ) {
		if( sizeof(msg_buffer) < MAX_MSG_BUFFER )
			msg_buffer += ({ msg });
	} else
		receive( msg );
}

void write_prompt()
{
        string msg = "[输入时暂存讯息]\n" ;
        string cwd = this_object()->query("cwd");

        msg = CONVERT_D->output(msg,this_object());


        if( sizeof(msg_buffer) ) {
                receive(BOLD + msg + NOR);
                for(int i=0; i<sizeof(msg_buffer); i++)
                        receive(msg_buffer[i]);
                msg_buffer = ({});
        }
        if(wizardp(this_object()) && stringp(cwd))
                write("\n" + cwd[0..strlen(cwd)-2] + "> ");
        else
    write(HIY "> " NOR);
}

void receive_snoop(string msg)
{
        msg = CONVERT_D->output(msg,this_object());
	receive("%" + msg);
}
